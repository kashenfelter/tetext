% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drlib.R
\name{reorder_within}
\alias{reorder_within}
\alias{scale_x_reordered}
\alias{scale_y_reordered}
\title{Reorder an x or y axis within facets}
\source{
\url{https://github.com/dgrtwo/drlib/blob/master/R/reorder_within.R#L1}
}
\usage{
reorder_within(x, by, within, fun = mean, sep = "___", ...)

scale_x_reordered(..., sep = "___")

scale_y_reordered(..., sep = "___")
}
\arguments{
\item{x}{Vector to reorder.}

\item{by}{Vector of the same length, to use for reordering.}

\item{within}{Vector of the same length that will later be used for faceting}

\item{fun}{Function to perform within each subset to determine the resulting
ordering. By default, mean.}

\item{sep}{Separator to distinguish the two. You may want to set this manually
if ___ can exist within one of your labels.}

\item{...}{In \code{reorder_within} arguments passed on to \code{\link{reorder}}.
In the scale functions, extra arguments passed on to
\code{\link[ggplot2]{scale_x_discrete}} or \code{\link[ggplot2]{scale_y_discrete}}.}
}
\description{
(Copy-pasted from the \code{drlib} package)
Reorder a column before plotting with faceting, such that the values are ordered
within each facet. This requires two functions: \code{reorder_within} applied to
the column, then either \code{scale_x_reordered} or \code{scale_y_reordered} added
to the plot.
This is implemented as a bit of a hack: it appends ___ and then the facet
at the end of each string.
}
\details{
None.
}
