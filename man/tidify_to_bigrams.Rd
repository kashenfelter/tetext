% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidify.R
\name{tidify_to_bigrams_at}
\alias{tidify_to_bigrams_at}
\alias{tidify_to_bigrams}
\title{Prepare data for text analysis.}
\usage{
tidify_to_bigrams_at(data = NULL, text = NULL, rgx_pattern, rgx_replacement,
  stopwords = TRUE, stopwords_lexicon, rgx_ignore_custom)

tidify_to_bigrams(..., text)
}
\arguments{
\item{data}{data.frame.}

\item{text}{bare for NSE; character for SE. Name of column in \code{data} to parse.}

\item{rgx_pattern}{character. Regular expression to substitute.}

\item{rgx_replacement}{character. Regular expression used as replacement.}

\item{stopwords}{logical. Whether or not to remove stopwords. Default: TRUE}

\item{stopwords_lexicon}{character. If not specified, then uses all stop words
available in \code{tidytext} package.
Otherwise, must be a lexicon available in the \code{tidytext} package.}

\item{rgx_ignore_custom}{character. Custom regular expression to remove.}

\item{...}{dots. Parameters to pass directly to \code{visualize_time()}.}
}
\value{
data.frame.
}
\description{
Create a tidy data.frame of unigrams.
}
\details{
Heavily influenced by \href{https://www.tidytextmining.com/}{\emph{Text Mining with R}}.
Creates output columns 'word', 'word1', and 'word2'.
('word' is simply 'word1' and 'word2' toegether.)
}
