% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidify_to_bigrams.R
\name{tidify_to_bigrams}
\alias{tidify_to_bigrams}
\title{Prepare data for text analysis.}
\usage{
tidify_to_bigrams(data = NULL, colname_text = "text",
  colname_word = "word", rgx_pattern, rgx_replacement, stopwords = TRUE,
  stopwords_lexicon, rgx_ignore_custom)
}
\arguments{
\item{data}{data.frame. Not in 'tidy' format.}

\item{colname_text}{character. Name of column in \code{data} to parse. Default: 'text'}

\item{colname_word}{character. Name of output column for token. Default: 'word'}

\item{rgx_pattern}{character. Regular expression to substitute.}

\item{rgx_replacement}{character. Regular expression used as replacement.}

\item{stopwords}{logical. Whether or not to remove stopwords. Default: TRUE}

\item{stopwords_lexicon}{character. If not specified, then uses all stop words
available in \code{tidytext} package.
Otherwise, must be a lexicon available in the \code{tidytext} package.}

\item{rgx_ignore_custom}{character. Custom regular expression to remove.}
}
\value{
data.frame. In tidy format. 'word1' and 'word2' columns are named
'first' and 'second' respectively.
}
\description{
Create a tidy data.frame of unigrams.
}
\details{
Heavily influence by \href{https://www.tidytextmining.com/}{\emph{Text Mining with R}}.
}
